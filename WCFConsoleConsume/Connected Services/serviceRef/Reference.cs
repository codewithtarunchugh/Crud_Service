//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFConsoleConsume.serviceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFContact", Namespace="http://schemas.datacontract.org/2004/07/Crud_Service")]
    [System.SerializableAttribute()]
    public partial class WCFContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ContactDOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContactIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactAddress {
            get {
                return this.ContactAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactAddressField, value) != true)) {
                    this.ContactAddressField = value;
                    this.RaisePropertyChanged("ContactAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ContactDOB {
            get {
                return this.ContactDOBField;
            }
            set {
                if ((this.ContactDOBField.Equals(value) != true)) {
                    this.ContactDOBField = value;
                    this.RaisePropertyChanged("ContactDOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContactIncome {
            get {
                return this.ContactIncomeField;
            }
            set {
                if ((this.ContactIncomeField.Equals(value) != true)) {
                    this.ContactIncomeField = value;
                    this.RaisePropertyChanged("ContactIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNumber {
            get {
                return this.ContactNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNumberField, value) != true)) {
                    this.ContactNumberField = value;
                    this.RaisePropertyChanged("ContactNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="serviceRef.IWCFContact")]
    public interface IWCFContact {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/Insert", ReplyAction="http://tempuri.org/IWCFContact/InsertResponse")]
        int Insert(WCFConsoleConsume.serviceRef.WCFContact ContactPar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/Insert", ReplyAction="http://tempuri.org/IWCFContact/InsertResponse")]
        System.Threading.Tasks.Task<int> InsertAsync(WCFConsoleConsume.serviceRef.WCFContact ContactPar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/Update", ReplyAction="http://tempuri.org/IWCFContact/UpdateResponse")]
        int Update(WCFConsoleConsume.serviceRef.WCFContact ContactPar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/Update", ReplyAction="http://tempuri.org/IWCFContact/UpdateResponse")]
        System.Threading.Tasks.Task<int> UpdateAsync(WCFConsoleConsume.serviceRef.WCFContact ContactPar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/SelectAll", ReplyAction="http://tempuri.org/IWCFContact/SelectAllResponse")]
        WCFConsoleConsume.serviceRef.WCFContact[] SelectAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/SelectAll", ReplyAction="http://tempuri.org/IWCFContact/SelectAllResponse")]
        System.Threading.Tasks.Task<WCFConsoleConsume.serviceRef.WCFContact[]> SelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/Delete", ReplyAction="http://tempuri.org/IWCFContact/DeleteResponse")]
        int Delete(WCFConsoleConsume.serviceRef.WCFContact ContactPar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFContact/Delete", ReplyAction="http://tempuri.org/IWCFContact/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(WCFConsoleConsume.serviceRef.WCFContact ContactPar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFContactChannel : WCFConsoleConsume.serviceRef.IWCFContact, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFContactClient : System.ServiceModel.ClientBase<WCFConsoleConsume.serviceRef.IWCFContact>, WCFConsoleConsume.serviceRef.IWCFContact {
        
        public WCFContactClient() {
        }
        
        public WCFContactClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFContactClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFContactClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFContactClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(WCFConsoleConsume.serviceRef.WCFContact ContactPar) {
            return base.Channel.Insert(ContactPar);
        }
        
        public System.Threading.Tasks.Task<int> InsertAsync(WCFConsoleConsume.serviceRef.WCFContact ContactPar) {
            return base.Channel.InsertAsync(ContactPar);
        }
        
        public int Update(WCFConsoleConsume.serviceRef.WCFContact ContactPar) {
            return base.Channel.Update(ContactPar);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAsync(WCFConsoleConsume.serviceRef.WCFContact ContactPar) {
            return base.Channel.UpdateAsync(ContactPar);
        }
        
        public WCFConsoleConsume.serviceRef.WCFContact[] SelectAll() {
            return base.Channel.SelectAll();
        }
        
        public System.Threading.Tasks.Task<WCFConsoleConsume.serviceRef.WCFContact[]> SelectAllAsync() {
            return base.Channel.SelectAllAsync();
        }
        
        public int Delete(WCFConsoleConsume.serviceRef.WCFContact ContactPar) {
            return base.Channel.Delete(ContactPar);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(WCFConsoleConsume.serviceRef.WCFContact ContactPar) {
            return base.Channel.DeleteAsync(ContactPar);
        }
    }
}
